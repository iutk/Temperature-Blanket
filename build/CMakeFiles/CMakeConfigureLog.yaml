
---
events:
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineSystem.cmake:211 (message)"
      - "CMakeLists.txt:5 (project)"
    message: |
      The system is: Windows - 10.0.22621 - AMD64
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCCompiler.cmake:123 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:5 (project)"
    message: |
      Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
      Compiler:  
      Build flags: 
      Id flags:  
      
      The output was:
      0
      MSBuild version 17.8.3+195e7f5a3 for .NET Framework
      Build started 12/27/2023 1:36:23 AM.
      
      Project "C:\\Users\\utkuk\\OneDrive\\Desktop\\TemperatureBlanket\\build\\CMakeFiles\\3.27.2-msvc1\\CompilerIdC\\CompilerIdC.vcxproj" on node 1 (default targets).
      PrepareForBuild:
        Creating directory "Debug\\".
        Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details.
        Creating directory "Debug\\CompilerIdC.tlog\\".
      InitializeBuildStatus:
        Creating "Debug\\CompilerIdC.tlog\\unsuccessfulbuild" because "AlwaysCreate" was specified.
        Touching "Debug\\CompilerIdC.tlog\\unsuccessfulbuild".
      ClCompile:
        C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.38.33130\\bin\\HostX64\\x86\\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /Oy- /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\\\" /Fd"Debug\\vc143.pdb" /external:W0 /Gd /TC /analyze- /FC /errorReport:queue CMakeCCompilerId.c
        CMakeCCompilerId.c
      Link:
        C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.38.33130\\bin\\HostX64\\x86\\link.exe /ERRORREPORT:QUEUE /OUT:".\\CompilerIdC.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\\CompilerIdC.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\\CompilerIdC.lib" /MACHINE:X86 /SAFESEH Debug\\CMakeCCompilerId.obj
        CompilerIdC.vcxproj -> C:\\Users\\utkuk\\OneDrive\\Desktop\\TemperatureBlanket\\build\\CMakeFiles\\3.27.2-msvc1\\CompilerIdC\\CompilerIdC.exe
      PostBuildEvent:
        for %%i in (cl.exe) do @echo CMAKE_C_COMPILER=%%~$PATH:i
        :VCEnd
        CMAKE_C_COMPILER=C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.38.33130\\bin\\Hostx64\\x86\\cl.exe
      FinalizeBuildStatus:
        Deleting file "Debug\\CompilerIdC.tlog\\unsuccessfulbuild".
        Touching "Debug\\CompilerIdC.tlog\\CompilerIdC.lastbuildstate".
      Done Building Project "C:\\Users\\utkuk\\OneDrive\\Desktop\\TemperatureBlanket\\build\\CMakeFiles\\3.27.2-msvc1\\CompilerIdC\\CompilerIdC.vcxproj" (default targets).
      
      Build succeeded.
          0 Warning(s)
          0 Error(s)
      
      Time Elapsed 00:00:00.90
      
      
      Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CompilerIdC.exe"
      
      Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CompilerIdC.vcxproj"
      
      The C compiler identification is MSVC, found in:
        C:/Users/utkuk/OneDrive/Desktop/TemperatureBlanket/build/CMakeFiles/3.27.2-msvc1/CompilerIdC/CompilerIdC.exe
      
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineFortranCompiler.cmake:179 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:5 (project)"
    message: |
      Compiling the Fortran compiler identification source file "CMakeFortranCompilerId.F" failed.
      Compiler:  
      Build flags: 
      Id flags:  
      
      The output was:
      1
      
      Microsoft Visual Studio 2022 Version 17.8.3.
      Copyright (C) Microsoft Corp. All rights reserved.
      
      Catastrophic failure (Exception from HRESULT: 0x8000FFFF (E_UNEXPECTED))
      The operation could not be completed. The parameter is incorrect. 
      
      Use:
      devenv  [solutionfile | projectfile | folder | anyfile.ext]  [switches]
      
      The first argument for devenv is usually a solution file, project file or a folder.
      You can also use any other file as the first argument if you want to have the
      file open automatically in an editor. When you enter a project file, the IDE
      looks for an .sln file with the same base name as the project file in the
      parent directory for the project file. If no such .sln file exists, then the
      IDE looks for a single .sln file that references the project. If no such single
      .sln file exists, then the IDE creates an unsaved solution with a default .sln
      file name that has the same base name as the project file.
      
      Command line builds:
      devenv solutionfile.sln /build [ solutionconfig ] [ /project projectnameorfile [ /projectconfig name ] ]
      Available command line switches:
      
      /Build			Builds the solution or project with the specified solution
      			configuration. For example "Debug". If multiple platforms
      			are possible, the configuration name must be enclosed in quotes
      			and contain platform name. For example: "Debug|Win32".
      /Clean			Deletes build outputs.
      /Command		Starts the IDE and executes the command.
      /Deploy			Builds and then deploys the specified build configuration.
      /DoNotLoadProjects	Opens the specified solution without loading any projects.
      /Edit			Opens the specified files in a running instance of this
      			application. If there are no running instances, it will
      			start a new instance with a simplified window layout.
      /LCID			Sets the default language in the IDE for the UI.
      /Log			Logs IDE activity to the specified file for troubleshooting.
      /NoVSIP			Disables the VSIP developer's license key for VSIP testing.
      /Out			Appends the build log to a specified file.
      /Project		Specifies the project to build, clean, or deploy.
      			Must be used with /Build, /Rebuild, /Clean, or /Deploy.
      /ProjectConfig		Overrides the project configuration specified in the solution
      			configuration. For example "Debug". If multiple platforms are
      			possible, the configuration name must be enclosed in quotes
      			and contain platform name. For example: "Debug|Win32".
      			Must be used with /Project.
      /Rebuild		Cleans and then builds the solution or project with the
      			specified configuration.
      /ResetSettings		Restores the IDE's default settings, optionally resets to
      			the specified VSSettings file.
      /ResetSkipPkgs		Clears all SkipLoading tags added to VSPackages.
      /Run			Compiles and runs the specified solution.
      /RunExit		Compiles and runs the specified solution then closes the IDE.
      /SafeMode		Launches the IDE in safe mode loading minimal windows.
      /Upgrade		Upgrades the project or the solution and all projects in it.
      			A backup of these files will be created as appropriate. Please
      			see Help on 'Visual Studio Conversion Wizard' for more
      			information on the backup process.
      
      Product-specific switches:
      
      /debugexe	Open the specified executable to be debugged. The remainder of 
      		the command line is passed to this executable as its arguments.
      /diff		Compares two files.  Takes four parameters:
      		SourceFile, TargetFile, SourceDisplayName(optional),
      		TargetDisplayName(optional)
      /TfsLink	Opens Team Explorer and launches a viewer for the 
      		provided artifact URI if one is registered.
      /useenv		Use PATH, INCLUDE, LIBPATH, and LIB environment variables
      		instead of IDE paths for VC++ builds.
      
      To attach the debugger from the command line, use:
      	VsJITDebugger.exe -p <pid>
      
      
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineFortranCompiler.cmake:179 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:5 (project)"
    message: |
      Compiling the Fortran compiler identification source file "CMakeFortranCompilerId.F" failed.
      Compiler:  
      Build flags: 
      Id flags:  
      
      The output was:
      1
      
      Microsoft Visual Studio 2022 Version 17.8.3.
      Copyright (C) Microsoft Corp. All rights reserved.
      
      Catastrophic failure (Exception from HRESULT: 0x8000FFFF (E_UNEXPECTED))
      The operation could not be completed. The parameter is incorrect. 
      
      Use:
      devenv  [solutionfile | projectfile | folder | anyfile.ext]  [switches]
      
      The first argument for devenv is usually a solution file, project file or a folder.
      You can also use any other file as the first argument if you want to have the
      file open automatically in an editor. When you enter a project file, the IDE
      looks for an .sln file with the same base name as the project file in the
      parent directory for the project file. If no such .sln file exists, then the
      IDE looks for a single .sln file that references the project. If no such single
      .sln file exists, then the IDE creates an unsaved solution with a default .sln
      file name that has the same base name as the project file.
      
      Command line builds:
      devenv solutionfile.sln /build [ solutionconfig ] [ /project projectnameorfile [ /projectconfig name ] ]
      Available command line switches:
      
      /Build			Builds the solution or project with the specified solution
      			configuration. For example "Debug". If multiple platforms
      			are possible, the configuration name must be enclosed in quotes
      			and contain platform name. For example: "Debug|Win32".
      /Clean			Deletes build outputs.
      /Command		Starts the IDE and executes the command.
      /Deploy			Builds and then deploys the specified build configuration.
      /DoNotLoadProjects	Opens the specified solution without loading any projects.
      /Edit			Opens the specified files in a running instance of this
      			application. If there are no running instances, it will
      			start a new instance with a simplified window layout.
      /LCID			Sets the default language in the IDE for the UI.
      /Log			Logs IDE activity to the specified file for troubleshooting.
      /NoVSIP			Disables the VSIP developer's license key for VSIP testing.
      /Out			Appends the build log to a specified file.
      /Project		Specifies the project to build, clean, or deploy.
      			Must be used with /Build, /Rebuild, /Clean, or /Deploy.
      /ProjectConfig		Overrides the project configuration specified in the solution
      			configuration. For example "Debug". If multiple platforms are
      			possible, the configuration name must be enclosed in quotes
      			and contain platform name. For example: "Debug|Win32".
      			Must be used with /Project.
      /Rebuild		Cleans and then builds the solution or project with the
      			specified configuration.
      /ResetSettings		Restores the IDE's default settings, optionally resets to
      			the specified VSSettings file.
      /ResetSkipPkgs		Clears all SkipLoading tags added to VSPackages.
      /Run			Compiles and runs the specified solution.
      /RunExit		Compiles and runs the specified solution then closes the IDE.
      /SafeMode		Launches the IDE in safe mode loading minimal windows.
      /Upgrade		Upgrades the project or the solution and all projects in it.
      			A backup of these files will be created as appropriate. Please
      			see Help on 'Visual Studio Conversion Wizard' for more
      			information on the backup process.
      
      Product-specific switches:
      
      /debugexe	Open the specified executable to be debugged. The remainder of 
      		the command line is passed to this executable as its arguments.
      /diff		Compares two files.  Takes four parameters:
      		SourceFile, TargetFile, SourceDisplayName(optional),
      		TargetDisplayName(optional)
      /TfsLink	Opens Team Explorer and launches a viewer for the 
      		provided artifact URI if one is registered.
      /useenv		Use PATH, INCLUDE, LIBPATH, and LIB environment variables
      		instead of IDE paths for VC++ builds.
      
      To attach the debugger from the command line, use:
      	VsJITDebugger.exe -p <pid>
      
      
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerABI.cmake:57 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:5 (project)"
    checks:
      - "Detecting C compiler ABI info"
    directories:
      source: "C:/Users/utkuk/OneDrive/Desktop/TemperatureBlanket/build/CMakeFiles/CMakeScratch/TryCompile-g248fc"
      binary: "C:/Users/utkuk/OneDrive/Desktop/TemperatureBlanket/build/CMakeFiles/CMakeScratch/TryCompile-g248fc"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS"
      CMAKE_C_FLAGS_DEBUG: "/Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:X86"
    buildResult:
      variable: "CMAKE_C_ABI_COMPILED"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/utkuk/OneDrive/Desktop/TemperatureBlanket/build/CMakeFiles/CMakeScratch/TryCompile-g248fc'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_82ddb.vcxproj /p:Configuration=Debug /p:Platform=win32 /p:VisualStudioVersion=17.0 /v:n
        MSBuild version 17.8.3+195e7f5a3 for .NET Framework
        Build started 12/27/2023 1:36:33 AM.
        
        Project "C:\\Users\\utkuk\\OneDrive\\Desktop\\TemperatureBlanket\\build\\CMakeFiles\\CMakeScratch\\TryCompile-g248fc\\cmTC_82ddb.vcxproj" on node 1 (default targets).
        PrepareForBuild:
          Creating directory "cmTC_82ddb.dir\\Debug\\".
          Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://aka.ms/cpp/structured-output for more details.
          Creating directory "C:\\Users\\utkuk\\OneDrive\\Desktop\\TemperatureBlanket\\build\\CMakeFiles\\CMakeScratch\\TryCompile-g248fc\\Debug\\".
          Creating directory "cmTC_82ddb.dir\\Debug\\cmTC_82ddb.tlog\\".
        InitializeBuildStatus:
          Creating "cmTC_82ddb.dir\\Debug\\cmTC_82ddb.tlog\\unsuccessfulbuild" because "AlwaysCreate" was specified.
          Touching "cmTC_82ddb.dir\\Debug\\cmTC_82ddb.tlog\\unsuccessfulbuild".
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.38.33130\\bin\\HostX64\\x86\\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /Oy- /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_82ddb.dir\\Debug\\\\" /Fd"cmTC_82ddb.dir\\Debug\\vc143.pdb" /external:W1 /Gd /TC /analyze- /errorReport:queue "C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\share\\cmake-3.27\\Modules\\CMakeCCompilerABI.c"
          Microsoft (R) C/C++ Optimizing Compiler Version 19.38.33133 for x86
          Copyright (C) Microsoft Corporation.  All rights reserved.
          cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /Oy- /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_82ddb.dir\\Debug\\\\" /Fd"cmTC_82ddb.dir\\Debug\\vc143.pdb" /external:W1 /Gd /TC /analyze- /errorReport:queue "C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\share\\cmake-3.27\\Modules\\CMakeCCompilerABI.c"
          CMakeCCompilerABI.c
        Link:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.38.33130\\bin\\HostX64\\x86\\link.exe /ERRORREPORT:QUEUE /OUT:"C:\\Users\\utkuk\\OneDrive\\Desktop\\TemperatureBlanket\\build\\CMakeFiles\\CMakeScratch\\TryCompile-g248fc\\Debug\\cmTC_82ddb.exe" /INCREMENTAL /ILK:"cmTC_82ddb.dir\\Debug\\cmTC_82ddb.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/utkuk/OneDrive/Desktop/TemperatureBlanket/build/CMakeFiles/CMakeScratch/TryCompile-g248fc/Debug/cmTC_82ddb.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/utkuk/OneDrive/Desktop/TemperatureBlanket/build/CMakeFiles/CMakeScratch/TryCompile-g248fc/Debug/cmTC_82ddb.lib" /MACHINE:X86 /SAFESEH  /machine:X86 cmTC_82ddb.dir\\Debug\\CMakeCCompilerABI.obj
          cmTC_82ddb.vcxproj -> C:\\Users\\utkuk\\OneDrive\\Desktop\\TemperatureBlanket\\build\\CMakeFiles\\CMakeScratch\\TryCompile-g248fc\\Debug\\cmTC_82ddb.exe
        FinalizeBuildStatus:
          Deleting file "cmTC_82ddb.dir\\Debug\\cmTC_82ddb.tlog\\unsuccessfulbuild".
          Touching "cmTC_82ddb.dir\\Debug\\cmTC_82ddb.tlog\\cmTC_82ddb.lastbuildstate".
        Done Building Project "C:\\Users\\utkuk\\OneDrive\\Desktop\\TemperatureBlanket\\build\\CMakeFiles\\CMakeScratch\\TryCompile-g248fc\\cmTC_82ddb.vcxproj" (default targets).
        
        Build succeeded.
            0 Warning(s)
            0 Error(s)
        
        Time Elapsed 00:00:00.40
        
      exitCode: 0
...

---
events:
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineFortranCompiler.cmake:179 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:5 (project)"
    message: |
      Compiling the Fortran compiler identification source file "CMakeFortranCompilerId.F" failed.
      Compiler:  
      Build flags: 
      Id flags:  
      
      The output was:
      1
      
      Microsoft Visual Studio 2022 Version 17.8.3.
      Copyright (C) Microsoft Corp. All rights reserved.
      
      Catastrophic failure (Exception from HRESULT: 0x8000FFFF (E_UNEXPECTED))
      The operation could not be completed. The parameter is incorrect. 
      
      Use:
      devenv  [solutionfile | projectfile | folder | anyfile.ext]  [switches]
      
      The first argument for devenv is usually a solution file, project file or a folder.
      You can also use any other file as the first argument if you want to have the
      file open automatically in an editor. When you enter a project file, the IDE
      looks for an .sln file with the same base name as the project file in the
      parent directory for the project file. If no such .sln file exists, then the
      IDE looks for a single .sln file that references the project. If no such single
      .sln file exists, then the IDE creates an unsaved solution with a default .sln
      file name that has the same base name as the project file.
      
      Command line builds:
      devenv solutionfile.sln /build [ solutionconfig ] [ /project projectnameorfile [ /projectconfig name ] ]
      Available command line switches:
      
      /Build			Builds the solution or project with the specified solution
      			configuration. For example "Debug". If multiple platforms
      			are possible, the configuration name must be enclosed in quotes
      			and contain platform name. For example: "Debug|Win32".
      /Clean			Deletes build outputs.
      /Command		Starts the IDE and executes the command.
      /Deploy			Builds and then deploys the specified build configuration.
      /DoNotLoadProjects	Opens the specified solution without loading any projects.
      /Edit			Opens the specified files in a running instance of this
      			application. If there are no running instances, it will
      			start a new instance with a simplified window layout.
      /LCID			Sets the default language in the IDE for the UI.
      /Log			Logs IDE activity to the specified file for troubleshooting.
      /NoVSIP			Disables the VSIP developer's license key for VSIP testing.
      /Out			Appends the build log to a specified file.
      /Project		Specifies the project to build, clean, or deploy.
      			Must be used with /Build, /Rebuild, /Clean, or /Deploy.
      /ProjectConfig		Overrides the project configuration specified in the solution
      			configuration. For example "Debug". If multiple platforms are
      			possible, the configuration name must be enclosed in quotes
      			and contain platform name. For example: "Debug|Win32".
      			Must be used with /Project.
      /Rebuild		Cleans and then builds the solution or project with the
      			specified configuration.
      /ResetSettings		Restores the IDE's default settings, optionally resets to
      			the specified VSSettings file.
      /ResetSkipPkgs		Clears all SkipLoading tags added to VSPackages.
      /Run			Compiles and runs the specified solution.
      /RunExit		Compiles and runs the specified solution then closes the IDE.
      /SafeMode		Launches the IDE in safe mode loading minimal windows.
      /Upgrade		Upgrades the project or the solution and all projects in it.
      			A backup of these files will be created as appropriate. Please
      			see Help on 'Visual Studio Conversion Wizard' for more
      			information on the backup process.
      
      Product-specific switches:
      
      /debugexe	Open the specified executable to be debugged. The remainder of 
      		the command line is passed to this executable as its arguments.
      /diff		Compares two files.  Takes four parameters:
      		SourceFile, TargetFile, SourceDisplayName(optional),
      		TargetDisplayName(optional)
      /TfsLink	Opens Team Explorer and launches a viewer for the 
      		provided artifact URI if one is registered.
      /useenv		Use PATH, INCLUDE, LIBPATH, and LIB environment variables
      		instead of IDE paths for VC++ builds.
      
      To attach the debugger from the command line, use:
      	VsJITDebugger.exe -p <pid>
      
      
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineFortranCompiler.cmake:179 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:5 (project)"
    message: |
      Compiling the Fortran compiler identification source file "CMakeFortranCompilerId.F" failed.
      Compiler:  
      Build flags: 
      Id flags:  
      
      The output was:
      1
      
      Microsoft Visual Studio 2022 Version 17.8.3.
      Copyright (C) Microsoft Corp. All rights reserved.
      
      Catastrophic failure (Exception from HRESULT: 0x8000FFFF (E_UNEXPECTED))
      The operation could not be completed. The parameter is incorrect. 
      
      Use:
      devenv  [solutionfile | projectfile | folder | anyfile.ext]  [switches]
      
      The first argument for devenv is usually a solution file, project file or a folder.
      You can also use any other file as the first argument if you want to have the
      file open automatically in an editor. When you enter a project file, the IDE
      looks for an .sln file with the same base name as the project file in the
      parent directory for the project file. If no such .sln file exists, then the
      IDE looks for a single .sln file that references the project. If no such single
      .sln file exists, then the IDE creates an unsaved solution with a default .sln
      file name that has the same base name as the project file.
      
      Command line builds:
      devenv solutionfile.sln /build [ solutionconfig ] [ /project projectnameorfile [ /projectconfig name ] ]
      Available command line switches:
      
      /Build			Builds the solution or project with the specified solution
      			configuration. For example "Debug". If multiple platforms
      			are possible, the configuration name must be enclosed in quotes
      			and contain platform name. For example: "Debug|Win32".
      /Clean			Deletes build outputs.
      /Command		Starts the IDE and executes the command.
      /Deploy			Builds and then deploys the specified build configuration.
      /DoNotLoadProjects	Opens the specified solution without loading any projects.
      /Edit			Opens the specified files in a running instance of this
      			application. If there are no running instances, it will
      			start a new instance with a simplified window layout.
      /LCID			Sets the default language in the IDE for the UI.
      /Log			Logs IDE activity to the specified file for troubleshooting.
      /NoVSIP			Disables the VSIP developer's license key for VSIP testing.
      /Out			Appends the build log to a specified file.
      /Project		Specifies the project to build, clean, or deploy.
      			Must be used with /Build, /Rebuild, /Clean, or /Deploy.
      /ProjectConfig		Overrides the project configuration specified in the solution
      			configuration. For example "Debug". If multiple platforms are
      			possible, the configuration name must be enclosed in quotes
      			and contain platform name. For example: "Debug|Win32".
      			Must be used with /Project.
      /Rebuild		Cleans and then builds the solution or project with the
      			specified configuration.
      /ResetSettings		Restores the IDE's default settings, optionally resets to
      			the specified VSSettings file.
      /ResetSkipPkgs		Clears all SkipLoading tags added to VSPackages.
      /Run			Compiles and runs the specified solution.
      /RunExit		Compiles and runs the specified solution then closes the IDE.
      /SafeMode		Launches the IDE in safe mode loading minimal windows.
      /Upgrade		Upgrades the project or the solution and all projects in it.
      			A backup of these files will be created as appropriate. Please
      			see Help on 'Visual Studio Conversion Wizard' for more
      			information on the backup process.
      
      Product-specific switches:
      
      /debugexe	Open the specified executable to be debugged. The remainder of 
      		the command line is passed to this executable as its arguments.
      /diff		Compares two files.  Takes four parameters:
      		SourceFile, TargetFile, SourceDisplayName(optional),
      		TargetDisplayName(optional)
      /TfsLink	Opens Team Explorer and launches a viewer for the 
      		provided artifact URI if one is registered.
      /useenv		Use PATH, INCLUDE, LIBPATH, and LIB environment variables
      		instead of IDE paths for VC++ builds.
      
      To attach the debugger from the command line, use:
      	VsJITDebugger.exe -p <pid>
      
      
...

---
events:
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineFortranCompiler.cmake:179 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:5 (project)"
    message: |
      Compiling the Fortran compiler identification source file "CMakeFortranCompilerId.F" failed.
      Compiler:  
      Build flags: 
      Id flags:  
      
      The output was:
      1
      
      Microsoft Visual Studio 2022 Version 17.8.3.
      Copyright (C) Microsoft Corp. All rights reserved.
      
      Catastrophic failure (Exception from HRESULT: 0x8000FFFF (E_UNEXPECTED))
      The operation could not be completed. The parameter is incorrect. 
      
      Use:
      devenv  [solutionfile | projectfile | folder | anyfile.ext]  [switches]
      
      The first argument for devenv is usually a solution file, project file or a folder.
      You can also use any other file as the first argument if you want to have the
      file open automatically in an editor. When you enter a project file, the IDE
      looks for an .sln file with the same base name as the project file in the
      parent directory for the project file. If no such .sln file exists, then the
      IDE looks for a single .sln file that references the project. If no such single
      .sln file exists, then the IDE creates an unsaved solution with a default .sln
      file name that has the same base name as the project file.
      
      Command line builds:
      devenv solutionfile.sln /build [ solutionconfig ] [ /project projectnameorfile [ /projectconfig name ] ]
      Available command line switches:
      
      /Build			Builds the solution or project with the specified solution
      			configuration. For example "Debug". If multiple platforms
      			are possible, the configuration name must be enclosed in quotes
      			and contain platform name. For example: "Debug|Win32".
      /Clean			Deletes build outputs.
      /Command		Starts the IDE and executes the command.
      /Deploy			Builds and then deploys the specified build configuration.
      /DoNotLoadProjects	Opens the specified solution without loading any projects.
      /Edit			Opens the specified files in a running instance of this
      			application. If there are no running instances, it will
      			start a new instance with a simplified window layout.
      /LCID			Sets the default language in the IDE for the UI.
      /Log			Logs IDE activity to the specified file for troubleshooting.
      /NoVSIP			Disables the VSIP developer's license key for VSIP testing.
      /Out			Appends the build log to a specified file.
      /Project		Specifies the project to build, clean, or deploy.
      			Must be used with /Build, /Rebuild, /Clean, or /Deploy.
      /ProjectConfig		Overrides the project configuration specified in the solution
      			configuration. For example "Debug". If multiple platforms are
      			possible, the configuration name must be enclosed in quotes
      			and contain platform name. For example: "Debug|Win32".
      			Must be used with /Project.
      /Rebuild		Cleans and then builds the solution or project with the
      			specified configuration.
      /ResetSettings		Restores the IDE's default settings, optionally resets to
      			the specified VSSettings file.
      /ResetSkipPkgs		Clears all SkipLoading tags added to VSPackages.
      /Run			Compiles and runs the specified solution.
      /RunExit		Compiles and runs the specified solution then closes the IDE.
      /SafeMode		Launches the IDE in safe mode loading minimal windows.
      /Upgrade		Upgrades the project or the solution and all projects in it.
      			A backup of these files will be created as appropriate. Please
      			see Help on 'Visual Studio Conversion Wizard' for more
      			information on the backup process.
      
      Product-specific switches:
      
      /debugexe	Open the specified executable to be debugged. The remainder of 
      		the command line is passed to this executable as its arguments.
      /diff		Compares two files.  Takes four parameters:
      		SourceFile, TargetFile, SourceDisplayName(optional),
      		TargetDisplayName(optional)
      /TfsLink	Opens Team Explorer and launches a viewer for the 
      		provided artifact URI if one is registered.
      /useenv		Use PATH, INCLUDE, LIBPATH, and LIB environment variables
      		instead of IDE paths for VC++ builds.
      
      To attach the debugger from the command line, use:
      	VsJITDebugger.exe -p <pid>
      
      
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineFortranCompiler.cmake:179 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:5 (project)"
    message: |
      Compiling the Fortran compiler identification source file "CMakeFortranCompilerId.F" failed.
      Compiler:  
      Build flags: 
      Id flags:  
      
      The output was:
      1
      
      Microsoft Visual Studio 2022 Version 17.8.3.
      Copyright (C) Microsoft Corp. All rights reserved.
      
      Catastrophic failure (Exception from HRESULT: 0x8000FFFF (E_UNEXPECTED))
      The operation could not be completed. The parameter is incorrect. 
      
      Use:
      devenv  [solutionfile | projectfile | folder | anyfile.ext]  [switches]
      
      The first argument for devenv is usually a solution file, project file or a folder.
      You can also use any other file as the first argument if you want to have the
      file open automatically in an editor. When you enter a project file, the IDE
      looks for an .sln file with the same base name as the project file in the
      parent directory for the project file. If no such .sln file exists, then the
      IDE looks for a single .sln file that references the project. If no such single
      .sln file exists, then the IDE creates an unsaved solution with a default .sln
      file name that has the same base name as the project file.
      
      Command line builds:
      devenv solutionfile.sln /build [ solutionconfig ] [ /project projectnameorfile [ /projectconfig name ] ]
      Available command line switches:
      
      /Build			Builds the solution or project with the specified solution
      			configuration. For example "Debug". If multiple platforms
      			are possible, the configuration name must be enclosed in quotes
      			and contain platform name. For example: "Debug|Win32".
      /Clean			Deletes build outputs.
      /Command		Starts the IDE and executes the command.
      /Deploy			Builds and then deploys the specified build configuration.
      /DoNotLoadProjects	Opens the specified solution without loading any projects.
      /Edit			Opens the specified files in a running instance of this
      			application. If there are no running instances, it will
      			start a new instance with a simplified window layout.
      /LCID			Sets the default language in the IDE for the UI.
      /Log			Logs IDE activity to the specified file for troubleshooting.
      /NoVSIP			Disables the VSIP developer's license key for VSIP testing.
      /Out			Appends the build log to a specified file.
      /Project		Specifies the project to build, clean, or deploy.
      			Must be used with /Build, /Rebuild, /Clean, or /Deploy.
      /ProjectConfig		Overrides the project configuration specified in the solution
      			configuration. For example "Debug". If multiple platforms are
      			possible, the configuration name must be enclosed in quotes
      			and contain platform name. For example: "Debug|Win32".
      			Must be used with /Project.
      /Rebuild		Cleans and then builds the solution or project with the
      			specified configuration.
      /ResetSettings		Restores the IDE's default settings, optionally resets to
      			the specified VSSettings file.
      /ResetSkipPkgs		Clears all SkipLoading tags added to VSPackages.
      /Run			Compiles and runs the specified solution.
      /RunExit		Compiles and runs the specified solution then closes the IDE.
      /SafeMode		Launches the IDE in safe mode loading minimal windows.
      /Upgrade		Upgrades the project or the solution and all projects in it.
      			A backup of these files will be created as appropriate. Please
      			see Help on 'Visual Studio Conversion Wizard' for more
      			information on the backup process.
      
      Product-specific switches:
      
      /debugexe	Open the specified executable to be debugged. The remainder of 
      		the command line is passed to this executable as its arguments.
      /diff		Compares two files.  Takes four parameters:
      		SourceFile, TargetFile, SourceDisplayName(optional),
      		TargetDisplayName(optional)
      /TfsLink	Opens Team Explorer and launches a viewer for the 
      		provided artifact URI if one is registered.
      /useenv		Use PATH, INCLUDE, LIBPATH, and LIB environment variables
      		instead of IDE paths for VC++ builds.
      
      To attach the debugger from the command line, use:
      	VsJITDebugger.exe -p <pid>
      
      
...

---
events:
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineFortranCompiler.cmake:179 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:5 (project)"
    message: |
      Compiling the Fortran compiler identification source file "CMakeFortranCompilerId.F" failed.
      Compiler:  
      Build flags: 
      Id flags:  
      
      The output was:
      1
      
      Microsoft Visual Studio 2022 Version 17.8.3.
      Copyright (C) Microsoft Corp. All rights reserved.
      
      Catastrophic failure (Exception from HRESULT: 0x8000FFFF (E_UNEXPECTED))
      The operation could not be completed. The parameter is incorrect. 
      
      Use:
      devenv  [solutionfile | projectfile | folder | anyfile.ext]  [switches]
      
      The first argument for devenv is usually a solution file, project file or a folder.
      You can also use any other file as the first argument if you want to have the
      file open automatically in an editor. When you enter a project file, the IDE
      looks for an .sln file with the same base name as the project file in the
      parent directory for the project file. If no such .sln file exists, then the
      IDE looks for a single .sln file that references the project. If no such single
      .sln file exists, then the IDE creates an unsaved solution with a default .sln
      file name that has the same base name as the project file.
      
      Command line builds:
      devenv solutionfile.sln /build [ solutionconfig ] [ /project projectnameorfile [ /projectconfig name ] ]
      Available command line switches:
      
      /Build			Builds the solution or project with the specified solution
      			configuration. For example "Debug". If multiple platforms
      			are possible, the configuration name must be enclosed in quotes
      			and contain platform name. For example: "Debug|Win32".
      /Clean			Deletes build outputs.
      /Command		Starts the IDE and executes the command.
      /Deploy			Builds and then deploys the specified build configuration.
      /DoNotLoadProjects	Opens the specified solution without loading any projects.
      /Edit			Opens the specified files in a running instance of this
      			application. If there are no running instances, it will
      			start a new instance with a simplified window layout.
      /LCID			Sets the default language in the IDE for the UI.
      /Log			Logs IDE activity to the specified file for troubleshooting.
      /NoVSIP			Disables the VSIP developer's license key for VSIP testing.
      /Out			Appends the build log to a specified file.
      /Project		Specifies the project to build, clean, or deploy.
      			Must be used with /Build, /Rebuild, /Clean, or /Deploy.
      /ProjectConfig		Overrides the project configuration specified in the solution
      			configuration. For example "Debug". If multiple platforms are
      			possible, the configuration name must be enclosed in quotes
      			and contain platform name. For example: "Debug|Win32".
      			Must be used with /Project.
      /Rebuild		Cleans and then builds the solution or project with the
      			specified configuration.
      /ResetSettings		Restores the IDE's default settings, optionally resets to
      			the specified VSSettings file.
      /ResetSkipPkgs		Clears all SkipLoading tags added to VSPackages.
      /Run			Compiles and runs the specified solution.
      /RunExit		Compiles and runs the specified solution then closes the IDE.
      /SafeMode		Launches the IDE in safe mode loading minimal windows.
      /Upgrade		Upgrades the project or the solution and all projects in it.
      			A backup of these files will be created as appropriate. Please
      			see Help on 'Visual Studio Conversion Wizard' for more
      			information on the backup process.
      
      Product-specific switches:
      
      /debugexe	Open the specified executable to be debugged. The remainder of 
      		the command line is passed to this executable as its arguments.
      /diff		Compares two files.  Takes four parameters:
      		SourceFile, TargetFile, SourceDisplayName(optional),
      		TargetDisplayName(optional)
      /TfsLink	Opens Team Explorer and launches a viewer for the 
      		provided artifact URI if one is registered.
      /useenv		Use PATH, INCLUDE, LIBPATH, and LIB environment variables
      		instead of IDE paths for VC++ builds.
      
      To attach the debugger from the command line, use:
      	VsJITDebugger.exe -p <pid>
      
      
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.27/Modules/CMakeDetermineFortranCompiler.cmake:179 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:5 (project)"
    message: |
      Compiling the Fortran compiler identification source file "CMakeFortranCompilerId.F" failed.
      Compiler:  
      Build flags: 
      Id flags:  
      
      The output was:
      1
      
      Microsoft Visual Studio 2022 Version 17.8.3.
      Copyright (C) Microsoft Corp. All rights reserved.
      
      Catastrophic failure (Exception from HRESULT: 0x8000FFFF (E_UNEXPECTED))
      The operation could not be completed. The parameter is incorrect. 
      
      Use:
      devenv  [solutionfile | projectfile | folder | anyfile.ext]  [switches]
      
      The first argument for devenv is usually a solution file, project file or a folder.
      You can also use any other file as the first argument if you want to have the
      file open automatically in an editor. When you enter a project file, the IDE
      looks for an .sln file with the same base name as the project file in the
      parent directory for the project file. If no such .sln file exists, then the
      IDE looks for a single .sln file that references the project. If no such single
      .sln file exists, then the IDE creates an unsaved solution with a default .sln
      file name that has the same base name as the project file.
      
      Command line builds:
      devenv solutionfile.sln /build [ solutionconfig ] [ /project projectnameorfile [ /projectconfig name ] ]
      Available command line switches:
      
      /Build			Builds the solution or project with the specified solution
      			configuration. For example "Debug". If multiple platforms
      			are possible, the configuration name must be enclosed in quotes
      			and contain platform name. For example: "Debug|Win32".
      /Clean			Deletes build outputs.
      /Command		Starts the IDE and executes the command.
      /Deploy			Builds and then deploys the specified build configuration.
      /DoNotLoadProjects	Opens the specified solution without loading any projects.
      /Edit			Opens the specified files in a running instance of this
      			application. If there are no running instances, it will
      			start a new instance with a simplified window layout.
      /LCID			Sets the default language in the IDE for the UI.
      /Log			Logs IDE activity to the specified file for troubleshooting.
      /NoVSIP			Disables the VSIP developer's license key for VSIP testing.
      /Out			Appends the build log to a specified file.
      /Project		Specifies the project to build, clean, or deploy.
      			Must be used with /Build, /Rebuild, /Clean, or /Deploy.
      /ProjectConfig		Overrides the project configuration specified in the solution
      			configuration. For example "Debug". If multiple platforms are
      			possible, the configuration name must be enclosed in quotes
      			and contain platform name. For example: "Debug|Win32".
      			Must be used with /Project.
      /Rebuild		Cleans and then builds the solution or project with the
      			specified configuration.
      /ResetSettings		Restores the IDE's default settings, optionally resets to
      			the specified VSSettings file.
      /ResetSkipPkgs		Clears all SkipLoading tags added to VSPackages.
      /Run			Compiles and runs the specified solution.
      /RunExit		Compiles and runs the specified solution then closes the IDE.
      /SafeMode		Launches the IDE in safe mode loading minimal windows.
      /Upgrade		Upgrades the project or the solution and all projects in it.
      			A backup of these files will be created as appropriate. Please
      			see Help on 'Visual Studio Conversion Wizard' for more
      			information on the backup process.
      
      Product-specific switches:
      
      /debugexe	Open the specified executable to be debugged. The remainder of 
      		the command line is passed to this executable as its arguments.
      /diff		Compares two files.  Takes four parameters:
      		SourceFile, TargetFile, SourceDisplayName(optional),
      		TargetDisplayName(optional)
      /TfsLink	Opens Team Explorer and launches a viewer for the 
      		provided artifact URI if one is registered.
      /useenv		Use PATH, INCLUDE, LIBPATH, and LIB environment variables
      		instead of IDE paths for VC++ builds.
      
      To attach the debugger from the command line, use:
      	VsJITDebugger.exe -p <pid>
      
      
...
